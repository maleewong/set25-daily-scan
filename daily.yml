name: daily-report

on:
  # รันอัตโนมัติทุกวันทำการ หลังตลาดไทยปิดและข้อมูลอัปเดตเสร็จ (07:30 น.ไทย = 00:30 UTC)
  schedule:
      - cron: "30 0 * * 1-5"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KERNEL_NAME: gha-py311
      TZ: Asia/Bangkok
      RUN_MARKER: "รันเสร็จแล้ว:"   # ← ปรับคำได้ที่นี่ถ้าต้องการ

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Register Jupyter kernel
        run: |
          python -m ipykernel install --name "${KERNEL_NAME}" --sys-prefix
          jupyter kernelspec list

      - name: Show run date/time (Bangkok)
        run: |
          echo "=== Workflow run at (Asia/Bangkok) ==="
          date

      # 1) Execute notebook -> ได้ไฟล์ที่รันแล้วจริง (.ipynb)
      - name: Execute notebook to executed-ipynb (proof of execution)
        run: |
          jupyter nbconvert \
            --to notebook \
            --execute \
            --ExecutePreprocessor.kernel_name="${KERNEL_NAME}" \
            --ExecutePreprocessor.timeout=1800 \
            WFO_test_no_out.ipynb \
            --output WFO_executed.ipynb

      # 2) Verify ว่ามี execution_count (ยืนยันว่ารันจริง)
      - name: Verify executed counts exist
        run: |
          python - <<'PY'
          import json, sys
          with open("WFO_executed.ipynb","r",encoding="utf-8") as f:
              nb = json.load(f)
          counts = [c.get("execution_count") for c in nb.get("cells",[]) if c.get("cell_type")=="code"]
          if not any(c is not None for c in counts):
              print("ERROR: No execution_count found -> notebook not executed.")
              sys.exit(1)
          print("OK: executed code cells =", sum(c is not None for c in counts))
          PY

      # 3) Verify ว่ามี "รันเสร็จแล้ว:" ทั้งใน markdown cells และ outputs ของ code cells
      - name: Verify run marker in executed notebook (markdown or outputs)
        run: |
          python - <<'PY'
          import json, sys, os
          MARKER = os.environ.get("RUN_MARKER","รันเสร็จแล้ว:")
          with open("WFO_executed.ipynb","r",encoding="utf-8") as f:
              nb = json.load(f)

          def text_from_output(out):
              # รองรับทั้ง text/plain, text/markdown, text/html และ 'text' ธรรมดา
              parts = []
              if isinstance(out, dict):
                  if 'text' in out and out['text']:
                      parts.append(out['text'] if isinstance(out['text'], str) else ''.join(out['text']))
                  data = out.get('data', {})
                  for mime in ('text/markdown','text/plain','text/html'):
                      if mime in data and data[mime]:
                          val = data[mime]
                          parts.append(val if isinstance(val, str) else ''.join(val))
              return ''.join(parts)

          # รวบรวมข้อความจาก markdown cells
          md_text = []
          for c in nb.get("cells",[]):
              if c.get("cell_type")=="markdown":
                  src = c.get("source",[])
                  md_text.append(''.join(src) if isinstance(src, list) else str(src))
          md_blob = "\n".join(md_text)

          # รวบรวมข้อความจาก outputs ของ code cells
          out_text = []
          for c in nb.get("cells",[]):
              if c.get("cell_type")=="code":
                  for o in c.get("outputs", []):
                      out_text.append(text_from_output(o))
          out_blob = "\n".join(out_text)

          big = md_blob + "\n" + out_blob
          if MARKER not in big:
              print(f"ERROR: Run marker '{MARKER}' not found in executed notebook.")
              # ในกรณีที่ใช้คำภาษาอังกฤษ ให้ลองหา 'Run finished' เป็น fallback
              if "Run finished" in big or "finished at" in big:
                  print("NOTE: Found English run marker fallback, but not the Thai marker.")
              sys.exit(1)

          print("OK: found run marker in executed notebook.")
          PY

      # 4) แปลงไฟล์ที่รันแล้ว -> HTML (ซ่อนโค้ด) เพื่อเผยแพร่
      - name: Convert executed notebook -> HTML (hide code)
        run: |
          mkdir -p docs
          jupyter nbconvert \
            --to html \
            --TemplateExporter.exclude_input=True \
            WFO_executed.ipynb \
            --output index.html \
            --output-dir docs

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4




